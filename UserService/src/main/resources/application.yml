
server:
  port: 8081

spring:
  application:
    name: USER-SERVICE



  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: Rohit@123
    driver-class-name: com.mysql.cj.jdbc.Driver


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true


  config:
    import: configserver:http://localhost:8085

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-29976681.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal
            clientId: 0oaapfkj3avzCg7g15d7
            clientSecret:  wr9JaON33cKMk0DsewFw8lkm7Pk9tYAuZ3KH7XIj879K0aAknFrcAm5C1l_DJPip

        provider:
          okta:
            issuerUri: https://dev-29976681.okta.com/oauth2/default


#  client-id: 0oaapfkj3avzCg7g15d7
#    client-secret: wr9JaON33cKMk0DsewFw8lkm7Pk9tYAuZ3KH7XIj879K0aAknFrcAm5C1l_DJPip
#    scopes: openid, profile, email, offline_access



#
#management:
#  health:
#    circuit-breakers:
#      enabled: true

management:
  health:
    circuitbreakers:
      enabled: true

  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker :
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED



  retry:
    instances:
      ratingHotelService :
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 2
        timeoutDuration: 0s



#    configserver:http://localhost:8085 this is whole word

#  profiles:
#    active: dev





#eureka:
#  instance:
#    prefer-ip-address: true
#
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#
#    service-url:
#      defaultZone: http://localhost:8761/eureka


okta:
  oauth2:
    issuer: https://dev-29976681.okta.com/oauth2/default
    audience: api://default



#          issuer: https://dev-29976681.okta.com/oauth2/default
#    audience: api://default
#    client-id: 0oaapfkj3avzCg7g15d7
#    client-secret: wr9JaON33cKMk0DsewFw8lkm7Pk9tYAuZ3KH7XIj879K0aAknFrcAm5C1l_DJPip
#    scopes: openid, profile, email, offline_access

